{"version":3,"sources":["components/GlobalStyle.js","components/StyledButton.js","components/StyledDropzone.js","components/FileInput.js","components/StyledContentWrapper.js","components/StyledProcessing.js","components/StyledDownloadButton.js","components/DownloadHandler.js","components/StyledResetButton.js","components/ResetButton.js","parsers/CSVParser.js","parsers/JSONParser.js","components/Processing.js","components/App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","reset","Button","styled","button","StyledButton_templateObject","Dropzone","div","StyledDropzone_templateObject","checkType","file","strikes","name","split","type","FileInput","_ref","startConversion","onDrop","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee","fileName","wrap","_context","prev","next","length","abrupt","window","alert","stop","_x","apply","this","arguments","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","react_default","createElement","aria-label","role","ContentWrapper","main","StyledContentWrapper_templateObject","StyledProcessing","StyledProcessing_templateObject","DownloadButton","StyledDownloadButton_templateObject","DownloadHandler","csv","jsonItem","blob","url","JSON","stringify","sent","Blob","URL","createObjectURL","document","body","appendChild","href","download","concat","click","setTimeout","revokeObjectURL","removeChild","json","_ref3","_callee2","_context2","onClick","StyledResetButton","StyledResetButton_templateObject","ResetButton","CSVParser","updateDownload","classCallCheck","csvBlob","setDownload","dataArray","csvHeaderArray","objectArray","arr","newObj","newArr","i","toConsumableArray","shift","filter","str","arrayToObject","_this","reader","FileReader","onabort","onerror","onload","resultArray","result","toString","converter","readAsText","JSONParser","jsonBlob","jsonString","headers","keys","createCsvRow","values","parsedJSON","parse","readAsBinaryString","Processing","state","setState","props","react","components_DownloadHandler","components_ResetButton","toUpperCase","renderContent","Component","App","conversion","components_Processing","components_FileInput","render","components_App","querySelector"],"mappings":"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","file":"static/js/main.80833bfd.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset'\r\n\r\n///////////////////////\r\n// Global CSS Rules //\r\n/////////////////////\r\nexport const GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Francois+One&display=swap');\r\n\r\n  ${reset} // Styled reset\r\n\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    height: 100vh;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to right, #4e54c8, #8f94fb);\r\n    line-height: 1.6;\r\n    font-size: 2.6rem;\r\n    font-family: 'Francois One', sans-serif;\r\n    color: #f2f4f6;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  height: 5rem;\r\n  width: 18rem;\r\n  \r\n  background-color: #3c415e;\r\n  border-radius: .5rem;\r\n  border-color: #738598;\r\n  outline: none;\r\n  margin: 1rem;\r\n\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-family: inherit;\r\n  color: inherit;\r\n\r\n  transition: background-color .2s;\r\n\r\n  &:hover {\r\n    background-color: #738598;\r\n    cursor: pointer;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Dropzone = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  outline: none;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  font-size: 3rem;\r\n  color: inherit;\r\n`;","import React from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Button } from './StyledButton';\r\nimport { Dropzone } from './StyledDropzone';\r\n\r\n// File type validation. {Helper Funciton}\r\nfunction checkType(file) {\r\n  let strikes = 0;\r\n\r\n  if (file[0].name.split('.')[1] !== 'csv') strikes++;\r\n\r\n  if (file[0].type !== 'application/json') strikes++;\r\n\r\n  return strikes >= 2 ? true : false;\r\n}\r\n\r\nfunction FileInput({startConversion}) {\r\n  const onDrop = async file => {\r\n    if (file.length > 1) {\r\n      return window.alert('⚠️ Please choose a single file! ⚠️');\r\n    } \r\n    else if (checkType(file)) {\r\n      return window.alert('⚠️ Wrong file type! ⚠️');\r\n    } \r\n    else {\r\n      // Get file type to update App state.\r\n      const type = file[0].type ? file[0].type.split('/')[1] : file[0].name.split('.')[1];\r\n      const fileName = file[0].name.split('.')[0];\r\n      startConversion({\r\n       type: type,\r\n       file: file[0],\r\n       name: fileName\r\n      });\r\n    }\r\n  }\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({onDrop});\r\n\r\n    return (\r\n      <Dropzone {...getRootProps()}>\r\n        <p>{isDragActive ? 'Drop file here!' : 'Drag & drop'}</p>\r\n        {isDragActive ? '' : <p>or</p>}\r\n        <Button>Choose File <span aria-label=\"File Icon\" role=\"img\">💾</span></Button>\r\n        <input {...getInputProps()}/>\r\n      </Dropzone>\r\n    );\r\n}\r\n\r\nexport default FileInput;","import styled from 'styled-components';\r\n\r\n///////////////////////////////\r\n// Main App Content Wrapper //\r\n/////////////////////////////\r\nexport const ContentWrapper = styled.main`\r\n  height: 40rem;\r\n  width: 50rem;\r\n  background-color: #1D1F27;\r\n  border-radius: 2rem;\r\n  /* Absolute Centering */\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  box-shadow: 0 25px 50px -12px #1d1919;\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledProcessing = styled.div`\r\n  height: 5rem;\r\n  width: 100%;\r\n\r\n  text-align: center;\r\n  font-size: 2.4rem;\r\n  font-family: inherit;\r\n  color: inherit;\r\n\r\n  @keyframes spin {\r\n    from {transform:rotate(0deg);}\r\n    to {transform:rotate(360deg);}\r\n  }\r\n\r\n  /* Animate the gear emote */\r\n  & span {\r\n    display: inline-block;\r\n    font-size: 3.4rem;\r\n    animation: spin 2s infinite linear;\r\n  }\r\n`;","import styled from 'styled-components';\r\nimport { Button } from './StyledButton';\r\n\r\nexport const DownloadButton = styled(Button)`\r\n  background-color: #00bd56;\r\n  border: none;\r\n\r\n  color: #fff;\r\n\r\n  &:hover {\r\n    background-color: #10c864;\r\n  }\r\n`;","import React from 'react';\r\nimport { DownloadButton } from './StyledDownloadButton';\r\n\r\nfunction DownloadHandler({ file, type, fileName }) {\r\n  const csv = async () => {\r\n    const jsonItem = await JSON.stringify(file);\r\n    const blob = await new Blob([jsonItem], {type: 'application/json'});\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    document.body.appendChild(a);\r\n\r\n    a.href = url;\r\n    a.download = `${fileName}.json`;\r\n\r\n    a.click();\r\n\r\n    window.setTimeout(function() {\r\n      URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    }, 0);\r\n  }\r\n\r\n  const json = async () => {\r\n    const blob = await new Blob([file], {type: 'text/csv'});\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    document.body.appendChild(a);\r\n\r\n    a.href = url;\r\n    a.download = `${fileName}.csv`;\r\n\r\n    a.click();\r\n\r\n    window.setTimeout(function() {\r\n      URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    }, 0);\r\n  }\r\n\r\n\r\n  return (\r\n    <DownloadButton onClick={type === 'csv' ? () => csv() : () => json()}>Download <span aria-label=\"File Icon\" role=\"img\">💾</span></DownloadButton>\r\n  );\r\n}\r\n\r\nexport default DownloadHandler;\r\n","import styled from 'styled-components';\r\nimport { Button } from './StyledButton';\r\n\r\nexport const StyledResetButton = styled(Button)`\r\n  height: 2.5rem;\r\n  width: 9rem;\r\n\r\n  border-radius: .3rem;\r\n\r\n  font-size: 1.5rem;\r\n`;","import React from 'react';\r\nimport { StyledResetButton } from './StyledResetButton';\r\n\r\nfunction ResetButton({ reset }) {\r\n\r\n  return (\r\n    <StyledResetButton onClick={() => reset()}>Reset</StyledResetButton>\r\n  );\r\n}\r\n\r\nexport default ResetButton;\r\n","/*\r\n------------------\r\n|  CSV Parser   |\r\n-----------------\r\n*/\r\n\r\nclass CSVParser {\r\n constructor(file, updateDownload) {\r\n\r\n  this.csvBlob = new Blob([file]);\r\n\r\n  this.setDownload = updateDownload;\r\n\r\n  this.dataArray = [];\r\n\r\n  this.csvHeaderArray = [];\r\n\r\n  this.objectArray = [];\r\n\r\n }\r\n\r\n arrayToObject(arr) {\r\n   let newObj = {};\r\n   let newArr = arr.split(',');\r\n\r\n   for (let i = 0; i < this.csvHeaderArray.length; i++) {\r\n     newObj[this.csvHeaderArray[i]] = newArr[i];\r\n   }\r\n\r\n   return newObj;\r\n }\r\n\r\n async converter(arr) {\r\n  this.dataArray = [...arr];\r\n  this.csvHeaderArray = this.dataArray.shift().split(',').filter(str => str !== \"\");\r\n\r\n  for (let i = 0; i < this.dataArray.length; i++) {\r\n    // Remove the last \"empty\" object that has a single header and no value.\r\n    if (i === (this.dataArray.length - 1) && !(this.dataArray[i].split(',').length > 2)) return;\r\n    this.objectArray[i] = await this.arrayToObject(this.dataArray[i]);\r\n  }\r\n }\r\n\r\n parse() {\r\n  const reader = new FileReader();\r\n\r\n  reader.onabort = () => alert('⚠️ File reading was aborted ⚠️');\r\n  reader.onerror = () => alert('⚠️ File reading has failed ⚠️');\r\n\r\n  reader.onload = async () => {\r\n    // Converts the text into a string, and splits it on every new row or line break,\r\n    // Creating a new array with the input data.\r\n    const resultArray = await reader.result.toString().split(/[\\r\\n]+/);\r\n    \r\n    await this.converter(resultArray);\r\n\r\n    this.setDownload(this.objectArray);\r\n  }\r\n\r\n  reader.readAsText(this.csvBlob);\r\n }\r\n}\r\n\r\nexport default CSVParser;","/*\r\n------------------\r\n|  JSON Parser   |\r\n-----------------\r\n*/\r\n\r\nclass JSONParser {\r\n  constructor(file, updateDownload) {\r\n\r\n    this.jsonBlob = new Blob([file], {type: 'application/json'});\r\n\r\n    this.setDownload = updateDownload;\r\n\r\n    this.jsonString = '';\r\n\r\n  }\r\n\r\n  createCsvRow(arr) {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (i !== (arr.length - 1)) {\r\n        this.jsonString += `${arr[i]},`;\r\n      } else {\r\n        this.jsonString += `${arr[i]}\\n`;\r\n      }\r\n    }\r\n  }\r\n\r\n  converter(arr) {\r\n    const headers = Object.keys(arr[0]);\r\n\r\n    this.createCsvRow(headers);\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      this.createCsvRow(Object.values(arr[i]));\r\n    }\r\n  }\r\n\r\n  parse() {\r\n    const reader = new FileReader();\r\n\r\n    reader.onabort = () => alert('⚠️ File reading was aborted ⚠️');\r\n    reader.onerror = () => alert('⚠️ File reading has failed ⚠️');\r\n\r\n    reader.onload = async () => {\r\n      const parsedJSON = JSON.parse(reader.result);\r\n\r\n      await this.converter(parsedJSON);\r\n\r\n      this.setDownload(this.jsonString);\r\n    }\r\n    \r\n    reader.readAsBinaryString(this.jsonBlob);\r\n  }\r\n}\r\n\r\nexport default JSONParser;","import React, { Component,Fragment } from 'react';\r\nimport { StyledProcessing } from './StyledProcessing';\r\nimport DownloadHandler from './DownloadHandler';\r\nimport ResetButton from './ResetButton';\r\nimport CSVParser from '../parsers/CSVParser';\r\nimport JSONParser from '../parsers/JSONParser';\r\n\r\nclass Processing extends Component {\r\n  state = { download: null };\r\n\r\n  updateDownload = file => this.setState({ download: file });\r\n\r\n  componentDidMount() {\r\n    switch (this.props.type) {\r\n      case 'csv':\r\n          const csvParser = new CSVParser(this.props.file, this.updateDownload);\r\n          csvParser.parse();\r\n          break;\r\n      case 'json':\r\n          const jsonParser = new JSONParser(this.props.file, this.updateDownload);\r\n          jsonParser.parse();\r\n          break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  renderContent() {\r\n    if (!this.state.download) {\r\n     return <StyledProcessing><span aria-label=\"Gear Icon\" role=\"img\">⚙️</span>Processing {this.props.type.toUpperCase()}...</StyledProcessing>\r\n    } \r\n    else if (this.state.download) {\r\n      return (\r\n        <Fragment>\r\n          <p>Successfully Converted Data <span aria-label=\"Confetti Icon\" role=\"img\">🎊</span></p>\r\n          <DownloadHandler file={this.state.download} type={this.props.type} fileName={this.props.name} />\r\n          <ResetButton reset={this.props.reset} />\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.renderContent()}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Processing;","import React, { Component,Fragment } from 'react';\r\nimport { GlobalStyle } from './GlobalStyle';\r\nimport FileInput from './FileInput';\r\nimport { ContentWrapper } from './StyledContentWrapper';\r\nimport Processing from './Processing';\r\n\r\nclass App extends Component {\r\n  state = { conversion: null, file: null, name: '' };\r\n\r\n  startConversion = state => {\r\n    return state.file ? this.setState({ conversion: state.type, file: state.file, name: state.name }) : '';\r\n  }\r\n\r\n  reset = () => {\r\n    return this.setState({ conversion: null, file: null, name: '' });\r\n  }\r\n\r\n  renderContent() {\r\n    switch(this.state.conversion) {\r\n      case 'csv':\r\n\r\n          return <Processing reset={this.reset} file={this.state.file} type='csv' name={this.state.name} />;\r\n\r\n      case 'json':\r\n\r\n          return <Processing reset={this.reset} file={this.state.file} type='json' name={this.state.name} />;\r\n          \r\n      default:\r\n          return <FileInput startConversion={this.startConversion} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <Fragment>\r\n          <GlobalStyle />\r\n          <ContentWrapper>\r\n            {this.renderContent()}\r\n          </ContentWrapper>\r\n        </Fragment>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './components/App';\r\n\r\nrender(\r\n  <App />,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}